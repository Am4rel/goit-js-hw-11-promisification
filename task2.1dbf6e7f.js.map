{"version":3,"sources":["../node_modules/nice-try/src/index.js","task2.js"],"names":["require","promise","users","name","active","toggleUserState","allUsers","userName","Promise","resolve","reject","setTimeout","updatedUsers","map","user","logger","console","table","then"],"mappings":";AAAA,aAOA,OAAA,QAAA,SAAA,GAEA,IAAA,OAAA,IAAA,MAAA;;ACwBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAjCoBA,IAAAA,EAAAA,QAAQ,YAApBC,EAAAA,EAAAA,QAEFC,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,SAACC,EAAUC,GACxB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GACzBC,WAAW,WACDC,IAAAA,EAAeN,EAASO,IAAI,SAAAC,GAC9BA,OAAAA,EAAKX,OAASI,EAAgBO,EAAAA,EAAAA,GAAAA,GAA9B,GAAA,CAAoCV,QAASU,EAAKV,SAAWU,IAEjEL,EAAQG,GACRF,EAAO,8BACR,QAILK,EAAS,SAAAH,GAAgBI,OAAAA,QAAQC,MAAML,IAW7CP,EAAgBH,EAAO,SAASgB,KAAKH,GACrCV,EAAgBH,EAAO,OAAOgB,KAAKH","file":"task2.1dbf6e7f.js","sourceRoot":"..\\src","sourcesContent":["'use strict'\n\n/**\n * Tries to execute a function and discards any error that occurs.\n * @param {Function} fn - Function that might or might not throw an error.\n * @returns {?*} Return-value of the function when no error occurred.\n */\nmodule.exports = function(fn) {\n\n\ttry { return fn() } catch (e) {}\n\n}","const { promise } = require(\"nice-try\");\r\n\r\nconst users = [\r\n  { name: 'Mango', active: true },\r\n  { name: 'Poly', active: false },\r\n  { name: 'Ajax', active: true },\r\n  { name: 'Lux', active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, userName) => {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            const updatedUsers = allUsers.map(user =>\r\n                user.name === userName ? { ...user, active: !user.active } : user,\r\n            );\r\n            resolve(updatedUsers);\r\n            reject(\"We've got an error, sorry\");\r\n        }, 100);\r\n    })\r\n};\r\n\r\nconst logger = updatedUsers => console.table(updatedUsers);\r\n\r\n/*\r\n * Сейчас работает так\r\n */\r\n// toggleUserState(users, 'Mango', logger);\r\n// toggleUserState(users, 'Lux', logger);\r\n\r\n/*\r\n * Должно работать так\r\n */\r\ntoggleUserState(users, 'Mango').then(logger);\r\ntoggleUserState(users, 'Lux').then(logger);"]}